diff --git a/CMakeLists.txt b/CMakeLists.txt
index b96274e..540cc5a 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -27,7 +27,7 @@ file(GLOB RM_PENS_FILES rm_lines/src/renderer/rm_lines_stroker/rm_pens/*.cpp)
 file(GLOB RM_TEMPLATE_FILES rm_lines/src/renderer/rm_lines_stroker/templates/*.cpp)
 file(GLOB STB rm_lines/src/stb/*.cpp)
 
-add_library(rm_lines SHARED rm_lines/src/library.cpp
+add_library(rm_lines STATIC rm_lines/src/library.cpp
         rm_lines/src/scene_tree/scene_tree_export.cpp
         rm_lines/src/reader/tagged_block_reader.cpp
         rm_lines/src/v5/reader.cpp
diff --git a/rm_lines/src/library.cpp b/rm_lines/src/library.cpp
index 7b1a7c8..861093e 100644
--- a/rm_lines/src/library.cpp
+++ b/rm_lines/src/library.cpp
@@ -58,47 +58,3 @@ off_t getFileSize(FILE *file) {
 
     return size;
 }
-
-#ifdef _WIN32
-#include <windows.h>
-#include <dbghelp.h>
-#pragma comment(lib, "dbghelp.lib")
-
-std::string getStackTrace() {
-    void* stack[100];
-    unsigned short frames = CaptureStackBackTrace(0, 100, stack, NULL);
-    SYMBOL_INFO* symbol = (SYMBOL_INFO*)calloc(sizeof(SYMBOL_INFO) + 256 * sizeof(char), 1);
-    symbol->MaxNameLen = 255;
-    symbol->SizeOfStruct = sizeof(SYMBOL_INFO);
-
-    std::string stackTrace;
-    HANDLE process = GetCurrentProcess();
-    SymInitialize(process, NULL, TRUE);
-
-    for (unsigned int i = 0; i < frames; i++) {
-        SymFromAddr(process, (DWORD64)(stack[i]), 0, symbol);
-        stackTrace += std::to_string(frames - i - 1) + ": " + symbol->Name + "\n";
-    }
-
-    free(symbol);
-    return stackTrace;
-}
-
-#else
-#include <execinfo.h>
-#include <sstream>
-
-std::string getStackTrace() {
-    void *buffer[100];
-    int nptrs = backtrace(buffer, 100);
-    char **strings = backtrace_symbols(buffer, nptrs);
-
-    std::ostringstream stackTrace;
-    for (int i = 0; i < nptrs; i++) {
-        stackTrace << i << ": " << strings[i] << "\n";
-    }
-
-    free(strings);
-    return stackTrace.str();
-}
-#endif
